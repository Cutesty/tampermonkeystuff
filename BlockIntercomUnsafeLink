// ==UserScript==
// @name         Remove Unsafe Link Attributes
// @namespace    http://tampermonkey.net/
// @version      0.2
// @description  Remove "data-unsafe-link" and "data-unsafe-link-hostname" attributes from links
// @author       Pascal
// @match        *https://app.intercom.com/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';


    function processLinks() {
        // Get all links on the page
        var links = document.querySelectorAll('a');

        // Loop through each link
        links.forEach(function(link) {
            // If the link contains the specified unsafe attributes, remove them
            if (link.hasAttribute('data-unsafe-link') && link.hasAttribute('data-unsafe-link-hostname')) {
                link.removeAttribute('data-unsafe-link');
                link.removeAttribute('data-unsafe-link-hostname');
                console.log('Removed unsafe attributes from link:', link.href);
            }

            // If the link doesn't already have an href attribute, set it with the link's text content
            if (!link.hasAttribute('href')) {
                var linkText = link.textContent.trim();
                // Prepend "https://" if the link text doesn't already contain it
                if (!linkText.startsWith('https://')) {
                    linkText = 'https://' + linkText;
                }
                link.setAttribute('href', linkText);
                console.log('Added href attribute with link text:', linkText);
            }
        });
    }

    // Wait for the DOM to be fully loaded
    window.addEventListener('load', function() {
        console.log('Script is running on the page.');

        // Initial processing after a short delay
        setTimeout(processLinks, 1000);

        // Use MutationObserver to detect changes in the DOM
        var observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.addedNodes.length || mutation.removedNodes.length) {
                    console.log('DOM mutation detected. Processing links...');
                    processLinks();
                }
            });
        });

        // Configure and start the observer
        observer.observe(document.body, { childList: true, subtree: true });
    });

})();
